GitLab Tutorials: 10/18/22
I setup my current Github account (TessaRHartmann) about 2 months ago; possible mid-August.

1. Paste the console output you saved at the end of step 3.C (2 points)
tessahartmann@Tessas-Air assignment2 % git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 477 bytes | 477.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/TessaRHartmann/assignment2.git
   b2dd182..b059d1f  master -> master

2. How many commits have been done to the repository (not only by you, but by anyone) so far? Write the git command you used to get this information (4 points)
9
git rev-list --count HEAD

3. When was the README.md  file modified last? Write the git command you used to get this information (4 points)
"Author: Tessa Hartmann <tessahartmann@Tessas-Air.lan>
Date:   Tue Oct 18 22:29:49 2022 -0400

    Updated information files

commit f4975e5d56ff331762b318bfd12c5236e0299f25
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Wed Sep 25 18:33:08 2019 -0400

    -> Adding an empty README.md file"

I used "git log README.md".

4. Mention two reasons why branches are used in a Git repository (4 points)
- To encapsulate one's changes so they can work on their own "section" of a project without altering the entire project or "base" copy. 
- One can move through a project with easy; like adding new features for a client or revisting an older version of a project for a client.

5. What is the difference between git log and git status? (4 points)
Git log shows a log or record of previous commits. Git status shows if your working branch is up to date with the master or not. 

6. What command would you use to see the commits where “Vehicle.h” was one of the committed files? (4 points)
"git log Vehicle.h" or "git log --follow <file path>"

7. What command would you use to see the commits whose commit message contains the word “file”? (4 points)
git log --grep="file"

8. In the context of object-oriented programming (I) What is inheritance? (II) What is polymorphism? (III) What is encapsulation? (6 points)
- Inheritance is the process in which one class takes or "inherits" the attributes of a different class. 
- Polymorphism is ability of a variable, function or object to be present in multiple forms in a program.
- Encapsulation is used in classes as the encapsulation of data with the methods that act on that data into a one, conjoined unit. 

9. What is the main difference between the “Dictator and Lieutenants” workflow and the “Integration manager” workflow? (5 points)
In the Integration Manager workflow each developer makes push to his/her own public repository and pulls from the blessed/central repository.
While in the Director and Lieutenants workflow everyone makes pull from a central repository but only the dictator can push to it.

10. How would a team of 100 developers benefit from following the “Dictator and Lieutenants” workflow instead of the “Centralized” workflow? (5 points)
With a large project with 100 developers working on it, there is bound to be some conflict. The Dictator and Lieutenants workflow solves conflict 
by having the dictator repository merge changes in the lieutenant repositories and solves any arising conflicts; and in the lieutenant repositories
some changes are merged for some developers and conflicts are solved. A developer pushes changes to the assigned lieutenant repository which keeps
things organized. 